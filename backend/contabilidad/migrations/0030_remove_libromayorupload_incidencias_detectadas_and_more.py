# Generated by Django 5.2.1 on 2025-06-24 23:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contabilidad', '0029_libromayorupload_incidencias_detectadas_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='libromayorupload',
            name='incidencias_detectadas',
        ),
        migrations.RemoveField(
            model_name='libromayorupload',
            name='movimientos_procesados',
        ),
        migrations.RemoveField(
            model_name='libromayorupload',
            name='resumen_procesamiento',
        ),
        migrations.CreateModel(
            name='IncidenciaResumen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_incidencia', models.CharField(choices=[('cuentas_sin_clasificacion', 'Cuentas sin clasificación'), ('cuentas_sin_nombre_ingles', 'Cuentas sin nombre en inglés'), ('tipos_doc_no_reconocidos', 'Códigos tipo documento no reconocidos'), ('movimientos_tipodoc_nulo', 'Movimientos con TIPODOC vacío'), ('cuentas_nuevas_detectadas', 'Cuentas nuevas detectadas'), ('errores_formato_fecha', 'Errores de formato en fechas'), ('errores_formato_monto', 'Errores de formato en montos')], max_length=50)),
                ('codigo_problema', models.CharField(blank=True, help_text="Código específico del problema (ej: 'FAC', '1101', etc.)", max_length=100, null=True)),
                ('cantidad_afectada', models.IntegerField(help_text='Número total de elementos afectados')),
                ('elementos_afectados', models.JSONField(help_text='Lista de códigos/IDs afectados (cuentas, movimientos, etc.)')),
                ('detalle_muestra', models.JSONField(help_text='Primeros 5-10 ejemplos para debugging')),
                ('severidad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('critica', 'Crítica')], max_length=10)),
                ('estado', models.CharField(choices=[('activa', 'Activa'), ('resuelta', 'Resuelta'), ('obsoleta', 'Obsoleta')], default='activa', max_length=10)),
                ('mensaje_usuario', models.TextField(help_text='Mensaje descriptivo para mostrar al usuario')),
                ('accion_sugerida', models.TextField(help_text='Acción específica recomendada para resolver')),
                ('estadisticas_adicionales', models.JSONField(default=dict, help_text='Métricas adicionales (montos, fechas, etc.)')),
                ('fecha_deteccion', models.DateTimeField(auto_now_add=True)),
                ('fecha_resolucion', models.DateTimeField(blank=True, null=True)),
                ('resuelto_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('upload_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidencias_resumen', to='contabilidad.uploadlog')),
            ],
        ),
        migrations.CreateModel(
            name='LogResolucionIncidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion_realizada', models.CharField(choices=[('subida_tarjeta', 'Subida de tarjeta relacionada'), ('creacion_manual', 'Creación manual de datos'), ('correccion_archivo', 'Corrección en archivo fuente'), ('configuracion_sistema', 'Cambio en configuración'), ('reprocesamiento', 'Reprocesamiento automático')], max_length=50)),
                ('elementos_resueltos', models.JSONField(default=list, help_text='Lista específica de elementos que se resolvieron')),
                ('cantidad_resuelta', models.PositiveIntegerField(default=0)),
                ('observaciones', models.TextField(blank=True)),
                ('datos_adicionales', models.JSONField(default=dict, help_text='Información adicional específica de la acción')),
                ('fecha_accion', models.DateTimeField(auto_now_add=True)),
                ('incidencia_resumen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_resolucion', to='contabilidad.incidenciaresumen')),
                ('upload_log_relacionado', models.ForeignKey(blank=True, help_text='UploadLog de tarjeta relacionada que ayudó a resolver', null=True, on_delete=django.db.models.deletion.SET_NULL, to='contabilidad.uploadlog')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistorialReprocesamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iteracion', models.PositiveIntegerField(help_text='Número de iteración de reprocesamiento')),
                ('incidencias_previas', models.JSONField(default=list, help_text='Snapshot de incidencias antes del reprocesamiento')),
                ('incidencias_previas_count', models.PositiveIntegerField(default=0)),
                ('incidencias_nuevas', models.JSONField(default=list, help_text='Snapshot de incidencias después del reprocesamiento')),
                ('incidencias_nuevas_count', models.PositiveIntegerField(default=0)),
                ('incidencias_resueltas', models.JSONField(default=list, help_text='Lista de incidencias que se resolvieron en esta iteración')),
                ('incidencias_resueltas_count', models.PositiveIntegerField(default=0)),
                ('movimientos_corregidos', models.PositiveIntegerField(default=0)),
                ('movimientos_total', models.PositiveIntegerField(default=0)),
                ('tiempo_procesamiento', models.DurationField()),
                ('trigger_reprocesamiento', models.CharField(choices=[('user_manual', 'Reprocesamiento manual por usuario'), ('auto_after_upload', 'Automático después de subir tarjeta'), ('scheduled', 'Procesamiento programado'), ('api_trigger', 'Disparado por API externa')], max_length=20)),
                ('notas', models.TextField(blank=True)),
                ('fecha_inicio', models.DateTimeField(auto_now_add=True)),
                ('upload_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_reprocesamiento', to='contabilidad.uploadlog')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['upload_log', 'iteracion'], name='contabilida_upload__aedb8b_idx'), models.Index(fields=['fecha_inicio'], name='contabilida_fecha_i_089972_idx'), models.Index(fields=['trigger_reprocesamiento'], name='contabilida_trigger_ffdbe8_idx')],
                'unique_together': {('upload_log', 'iteracion')},
            },
        ),
        migrations.AddIndex(
            model_name='incidenciaresumen',
            index=models.Index(fields=['upload_log', 'tipo_incidencia'], name='contabilida_upload__4c371f_idx'),
        ),
        migrations.AddIndex(
            model_name='incidenciaresumen',
            index=models.Index(fields=['upload_log', 'estado'], name='contabilida_upload__dc247e_idx'),
        ),
        migrations.AddIndex(
            model_name='incidenciaresumen',
            index=models.Index(fields=['severidad', 'estado'], name='contabilida_severid_7f5e2b_idx'),
        ),
        migrations.AddIndex(
            model_name='incidenciaresumen',
            index=models.Index(fields=['fecha_deteccion'], name='contabilida_fecha_d_20650b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='incidenciaresumen',
            unique_together={('upload_log', 'tipo_incidencia', 'codigo_problema')},
        ),
        migrations.AddIndex(
            model_name='logresolucionincidencia',
            index=models.Index(fields=['incidencia_resumen', 'fecha_accion'], name='contabilida_inciden_a59508_idx'),
        ),
        migrations.AddIndex(
            model_name='logresolucionincidencia',
            index=models.Index(fields=['accion_realizada'], name='contabilida_accion__b4827b_idx'),
        ),
        migrations.AddIndex(
            model_name='logresolucionincidencia',
            index=models.Index(fields=['usuario'], name='contabilida_usuario_9f98f3_idx'),
        ),
    ]
